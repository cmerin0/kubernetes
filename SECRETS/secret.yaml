apiVersion: v1
kind: Secret
metadata:
  name: my-app-secrets
type: Opaque # The default type for user-defined Secrets
data:
  # Data must be base64-encoded.
  # 'db_password' = 'my-password'
  db_password: "bXktcGFzc3dvcmQ="
  # 'api_token' = '123-xyz-789'
  api_token: "MTIzLXh5ei03ODk="

---
# A Secret to hold a TLS certificate and key
apiVersion: v1
kind: Secret
metadata:
  name: my-tls-secret
type: kubernetes.io/tls
data:
  # The certificate must be base64-encoded
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t..."
  # The private key must be base64-encoded
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQo..."

---
# An Opaque Secret to hold a custom API token
apiVersion: v1
kind: Secret
metadata:
  name: my-api-token
  annotations:
    mycompany.com/purpose: "API key for external service"
type: Opaque
stringData:
  # Using stringData allows you to provide plaintext values.
  # Kubernetes will automatically base64-encode them for you.
  api_token: "very-long-secret-api-key-12345"
  webhook_secret: "shh-this-is-a-secret-webhook-password"

---
# A ServiceAccount token Secret (automatically created by Kubernetes)
apiVersion: v1
kind: Secret
metadata:
  name: my-service-account-token
  annotations:
    kubernetes.io/service-account.name: my-service-account
type: kubernetes.io/service-account-token
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t..."
  namespace: "ZGVmYXVsdA=="
  token: "ZXlKaGJHY2lPaUpTVXp3aU..."